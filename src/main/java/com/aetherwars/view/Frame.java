/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aetherwars.view;

import com.aetherwars.GUI.Components.*;
import com.aetherwars.card.Character.Type;
import com.aetherwars.card.SummonedCharacter;
import com.aetherwars.controller.BoardController;
import com.aetherwars.card.Character.Character;
import com.aetherwars.card.Character.Type;
import com.aetherwars.util.GlobalVar;
import com.aetherwars.util.Utility;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import static com.aetherwars.util.Utility.getFractionSize;

/**
 *
 * @author Fahmi
 */
public class Frame extends javax.swing.JFrame {
    private BoardController board_controller;
    private Dimension screenSize;
    private int screenWidth;
    private int screenHeight;
    public static Frame Instance;
    int turn;

    /**
     * Creates new form Frame
     */
    private boolean isDebugMode;//jika true, maka fitur debug aktif
    public Frame(boolean isDebugMode) {
        turn = 1;
        screenWidth = GlobalVar.getScreenWidth();
        screenHeight = GlobalVar.getScreenHeight();
        this.isDebugMode = isDebugMode;
        System.out.println(isDebugMode);
        this.setSize(new Dimension((int)(this.screenWidth),(int)(this.screenHeight)));
        Frame.Instance = this;
        this.setLayout(null);
        init();
        initKeyListener();
    }
    public static Frame getInstance(){
        if(Instance==null){
            Instance = new Frame(true);
        }
        return Instance;
    }
    public void setDebugMode(boolean debugMode){
        this.isDebugMode= debugMode;
    }
    public boolean getDebugMode(){
        return isDebugMode;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  //  @SuppressWarnings("unchecked")
   // // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void init() {
        java.awt.GridBagConstraints gridBagConstraints;
        jPanel7 = new javax.swing.JPanel();
        pnl_north = new javax.swing.JPanel();
        lbl_name1 = new javax.swing.JLabel();
        pnl_healtbar2 = new javax.swing.JPanel();
        //prb_healthbar2 = new javax.swing.JProgressBar();
        lbl_name2 = new javax.swing.JLabel();
        pnl_turns = new TurnInfo(turn);
        jPanel1 = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 10));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(27, 0), new java.awt.Dimension(10, 0));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(28, 0), new java.awt.Dimension(10, 0));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5));
        pnl_center = new javax.swing.JPanel();
        pnl_board = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        player1Picture = new PlayerPicture("/com/aetherwars/card/image/Player/Steve.png");
        deck_A_player1 = new PlayerDeckCard("A");
        deck_C_player1 = new PlayerDeckCard("C");
 //       deck_C_player1.addCharacter(new SummonedCharacter(new Character(1,"Enderman",100,"Penghuni The End","/com/aetherwars/card/image/character/Enderman.png", com.aetherwars.card.Character.Type.END,10,2,12,2),2));
        deck_B_player1 = new PlayerDeckCard("B");
   //     deck_B_player1.addCharacter(new SummonedCharacter(new Character(1,"Enderman",100,"Penghuni The End","/com/aetherwars/card/image/character/Enderman.png", com.aetherwars.card.Character.Type.END,8,2,10,2),2));
  //      deck_B_player1.setSelected(true);
        deck_D_player1 = new PlayerDeckCard("D");
        deck_E_player1 = new PlayerDeckCard("E");
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 10), new java.awt.Dimension(10, 10), new java.awt.Dimension(10, 10));
        jPanel14 = new javax.swing.JPanel();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 10), new java.awt.Dimension(10, 10), new java.awt.Dimension(10, 10));
        player2Picture = new PlayerPicture("/com/aetherwars/card/image/Player/Alex.jpg");
        deck_A_player2 = new PlayerDeckCard("A");
        deck_B_player2 = new PlayerDeckCard("B");
        deck_D_player2 = new PlayerDeckCard("D");
        deck_E_player2 = new PlayerDeckCard("E");
        deck_C_player2 = new PlayerDeckCard("C");
        pnl_phase = new javax.swing.JPanel();
        pnl_draw_phase = new ProgressPanel("DRAW");
        label1 = new java.awt.Label();
        pnl_plan_phase = new ProgressPanel("PLAN");
        label2 = new java.awt.Label();
        pnl_attack_phase = new ProgressPanel("ATTACK");
        label3 = new java.awt.Label();
        pnl_end_phase = new ProgressPanel("END");
        label4 = new java.awt.Label();
        pnl_next_phase = new javax.swing.JPanel();
        nextPhaseLabel = new java.awt.Button();
        nextPhaseLabel.setLabel(">>");
        //nextPhaseLabel.setAlignment(java.awt.Label.CENTER);
        nextPhaseLabel.setBackground(new java.awt.Color(0, 0, 0));
        nextPhaseLabel.setForeground(new java.awt.Color(225, 225, 225));
        pnl_south = new javax.swing.JPanel();
        pnl_south_west = new javax.swing.JPanel();
        handCard1 = new HandCardLabel(2,"card1_desc","/com/aetherwars/card/image/character/Creeper.png");
        handCard2 = new HandCardLabel(3,"card2_desc","/com/aetherwars/card/image/character/Skeleton.png");
        handCard3 = new HandCardLabel(4,"card3_desc","/com/aetherwars/card/image/spell/morph/Sheepify.png");
        handCard4 = new HandCardLabel(5,"card4_desc","/com/aetherwars/card/image/spell/potion/GWS.png");
        handCard5 = new HandCardLabel(6,"card5_desc","/com/aetherwars/card/image/spell/swap/Swab Test.png");
        pnl_south_center = new javax.swing.JPanel();
        pnl_card_preview = new CardPreviewPanel("/com/aetherwars/card/image/character/Sheep.png");
        pnl_south_east = new javax.swing.JPanel();
        pnl_card_description = new CardDescriptionPanel(new SummonedCharacter(new Character(1,"Enderman",100,"Penghuni The End","/com/aetherwars/card/image/character/Enderman.png", com.aetherwars.card.Character.Type.END,10,2,12,2),2));
        jPanel2 = new javax.swing.JPanel();
        cardDeckPanel = new CardDeckPanel(20,60);
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5));
        showManaLabel = new ShowManaLabel(0,1);
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 0));

        if(1==0) {
            javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
            jPanel7.setLayout(jPanel7Layout);
            jPanel7Layout.setHorizontalGroup(
                    jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(0, 100, Short.MAX_VALUE)
            );
            jPanel7Layout.setVerticalGroup(
                    jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(0, 100, Short.MAX_VALUE)
            );

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setResizable(false);

            pnl_north.setName("pnl_north"); // NOI18N
            pnl_north.setLayout(new java.awt.BorderLayout());

            lbl_name1.setText("Player 1");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
         //   pnl_healthbar1.add(lbl_name1, gridBagConstraints);

     //       pnl_north.add(pnl_healthbar1, java.awt.BorderLayout.LINE_START);

            pnl_healtbar2.setPreferredSize(new java.awt.Dimension(375, 26));
            pnl_healtbar2.setLayout(new java.awt.GridBagLayout());

            lbl_name2.setText("Player 2");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
            pnl_healtbar2.add(lbl_name2, gridBagConstraints);

            pnl_north.add(pnl_healtbar2, java.awt.BorderLayout.LINE_END);

            jPanel1.setBackground(new java.awt.Color(153, 153, 153));
            //jPanel1.setBackground(new java.awt.Color(200, 120, 153));
            jPanel1.setForeground(new java.awt.Color(153, 153, 153));
            jPanel1.setPreferredSize(new java.awt.Dimension(40, 40));

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(0, 57, Short.MAX_VALUE)
            );
            jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(0, 40, Short.MAX_VALUE)
            );

            getContentPane().add(pnl_north, java.awt.BorderLayout.NORTH);

            pnl_center.setLayout(new javax.swing.BoxLayout(pnl_center, javax.swing.BoxLayout.PAGE_AXIS));

            pnl_board.setLayout(new java.awt.GridLayout(1, 0));

            javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
            jPanel13.setLayout(jPanel13Layout);
            jPanel13Layout.setHorizontalGroup(
                    jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(filler7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(player1Picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel13Layout.createSequentialGroup()
                                                    .addComponent(deck_C_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(deck_D_player1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanel13Layout.createSequentialGroup()
                                                    .addComponent(deck_A_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(deck_B_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(18, 18, 18)
                                    .addComponent(deck_E_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(32, Short.MAX_VALUE))
            );
            jPanel13Layout.setVerticalGroup(
                    jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addContainerGap(35, Short.MAX_VALUE)
                                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                                    .addComponent(filler7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(87, 87, 87))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(player1Picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(68, 68, 68))
                                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(deck_B_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(deck_A_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGap(18, 18, 18)
                                                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addComponent(deck_C_player1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addComponent(deck_D_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGap(20, 20, 20)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                                    .addComponent(deck_E_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(71, 71, 71))))
            );

            pnl_board.add(jPanel13);
            javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
            jPanel14.setLayout(jPanel14Layout);
            jPanel14Layout.setHorizontalGroup(
                    jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                    .addContainerGap(31, Short.MAX_VALUE)
                                    .addComponent(deck_E_player2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(deck_B_player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(deck_D_player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(deck_A_player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(deck_C_player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(player2Picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(filler8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())
            );
            jPanel14Layout.setVerticalGroup(
                    jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addGap(93, 93, 93)
                                    .addComponent(filler8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                    .addContainerGap(31, Short.MAX_VALUE)
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel14Layout.createSequentialGroup()
                                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(deck_B_player2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(deck_A_player2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(deck_C_player2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(deck_D_player2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel14Layout.createSequentialGroup()
                                                    .addGap(47, 47, 47)
                                                    .addComponent(deck_E_player2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel14Layout.createSequentialGroup()
                                                    .addGap(15, 15, 20)
                                                    .addComponent(player2Picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(24, 24, 24))
            );

            pnl_board.add(jPanel14);

            pnl_center.add(pnl_board);

            pnl_draw_phase.setBackground(new java.awt.Color(225, 225, 225));
            pnl_draw_phase.setPreferredSize(new java.awt.Dimension(275, 24));
            pnl_draw_phase.setLayout(new java.awt.BorderLayout());

            label1.setAlignment(java.awt.Label.CENTER);
            label1.setText("DRAW");
            pnl_draw_phase.add(label1, java.awt.BorderLayout.CENTER);

            pnl_plan_phase.setBackground(new java.awt.Color(225, 225, 225));
            pnl_plan_phase.setPreferredSize(new java.awt.Dimension(275, 24));
            pnl_plan_phase.setLayout(new java.awt.BorderLayout());

            label2.setAlignment(java.awt.Label.CENTER);
            label2.setText("PLAN");
            pnl_plan_phase.add(label2, java.awt.BorderLayout.CENTER);

            pnl_attack_phase.setBackground(new java.awt.Color(225, 225, 225));
            pnl_attack_phase.setPreferredSize(new java.awt.Dimension(275, 24));
            pnl_attack_phase.setLayout(new java.awt.BorderLayout());

            label3.setAlignment(java.awt.Label.CENTER);
            label3.setText("ATTACK");
            pnl_attack_phase.add(label3, java.awt.BorderLayout.CENTER);

            pnl_end_phase.setBackground(new java.awt.Color(225, 225, 225));
            pnl_end_phase.setPreferredSize(new java.awt.Dimension(275, 24));
            pnl_end_phase.setLayout(new java.awt.BorderLayout());

            label4.setAlignment(java.awt.Label.CENTER);
            label4.setText("END");
            pnl_end_phase.add(label4, java.awt.BorderLayout.CENTER);
            nextPhaseLabel.setLabel(">>");
            //nextPhaseLabel.setAlignment(java.awt.Label.CENTER);
            nextPhaseLabel.setBackground(new java.awt.Color(0, 0, 0));
            nextPhaseLabel.setForeground(new java.awt.Color(225, 225, 225));
            pnl_next_phase.setBackground(new java.awt.Color(225, 225, 225));
            pnl_next_phase.setPreferredSize(new java.awt.Dimension(200, 24));

            javax.swing.GroupLayout pnl_next_phaseLayout = new javax.swing.GroupLayout(pnl_next_phase);
            pnl_next_phase.setLayout(pnl_next_phaseLayout);
            pnl_next_phaseLayout.setHorizontalGroup(
                    pnl_next_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextPhaseLabel)
                            .addGap(0, 90, Short.MAX_VALUE)
            );
            pnl_next_phaseLayout.setVerticalGroup(
                    pnl_next_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextPhaseLabel)
                            .addGap(0, 24, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout pnl_phaseLayout = new javax.swing.GroupLayout(pnl_phase);
            pnl_phase.setLayout(pnl_phaseLayout);
            pnl_phaseLayout.setHorizontalGroup(
                    pnl_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_phaseLayout.createSequentialGroup()
                                    .addContainerGap(31, Short.MAX_VALUE)
                                    .addComponent(pnl_draw_phase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pnl_plan_phase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pnl_attack_phase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pnl_end_phase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pnl_next_phase, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(17, 17, 17))
            );
            pnl_phaseLayout.setVerticalGroup(
                    pnl_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_phaseLayout.createSequentialGroup()
                                    .addContainerGap(36, Short.MAX_VALUE)
                                    .addGroup(pnl_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pnl_next_phase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(pnl_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(pnl_end_phase, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(pnl_draw_phase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(pnl_phaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(pnl_plan_phase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(pnl_attack_phase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(14, 14, 14))
            );

            pnl_center.add(pnl_phase);

            getContentPane().add(pnl_center, java.awt.BorderLayout.CENTER);

            pnl_south.setLayout(new java.awt.BorderLayout());
            javax.swing.GroupLayout pnl_south_westLayout = new javax.swing.GroupLayout(pnl_south_west);
            //       pnl_south_west.setBackground(new java.awt.Color(255, 53, 184));
            pnl_south_west.setLayout(pnl_south_westLayout);
            pnl_south_westLayout.setHorizontalGroup(
                    pnl_south_westLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_south_westLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(handCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(handCard2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(handCard3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(handCard4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(handCard5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))

            );
            pnl_south_westLayout.setVerticalGroup(
                    pnl_south_westLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_south_westLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(pnl_south_westLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(handCard5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(handCard2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(handCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(handCard3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(handCard4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addContainerGap(10, Short.MAX_VALUE))
            );

            pnl_south.add(pnl_south_west, java.awt.BorderLayout.WEST);
            javax.swing.GroupLayout pnl_south_centerLayout = new javax.swing.GroupLayout(pnl_south_center);
            pnl_south_center.setLayout(pnl_south_centerLayout);
            pnl_south_centerLayout.setHorizontalGroup(
                    pnl_south_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_south_centerLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(pnl_card_preview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(38, Short.MAX_VALUE))
            );
            pnl_south_centerLayout.setVerticalGroup(
                    pnl_south_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_south_centerLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(pnl_card_preview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addContainerGap())
            );

            pnl_south.add(pnl_south_center, java.awt.BorderLayout.CENTER);

            pnl_south_east.add(pnl_card_description);

            jPanel2.setPreferredSize(new java.awt.Dimension(100, 120));
            jPanel2.setLayout(new java.awt.BorderLayout());
            jPanel2.add(cardDeckPanel, java.awt.BorderLayout.NORTH);
            jPanel2.add(filler5, java.awt.BorderLayout.CENTER);
            jPanel2.add(showManaLabel, java.awt.BorderLayout.SOUTH);

            pnl_south_east.add(jPanel2);

            pnl_south.add(pnl_south_east, java.awt.BorderLayout.EAST);
            pnl_south.add(filler1, java.awt.BorderLayout.SOUTH);

            getContentPane().add(pnl_south, java.awt.BorderLayout.SOUTH);
        }
        //new layout
        //note: rendernya kek pake stack, jadi urutannya kebalik, yg terakhir ditambahin yang
        //pertama di render
        //grid debug
        grid = new GridHelper();
        if(isDebugMode) {
            this.add(grid);
        }
        //healthbar player 1
        healthbar1 = new HealthBar(100,100,Component.LEFT_ALIGNMENT);
        healthbar1.setBounds((int) ((1 / 60.0) * GlobalVar.getScreenWidth()),
               (int) (2 / 40.0 * GlobalVar.getScreenHeight()),
                (int)(15 / 60.0 * GlobalVar.getScreenWidth()),
                (int) (1.5 / 40.0 * GlobalVar.getScreenHeight()));
        this.add(healthbar1);
        //healthbar player 2
        healthbar2 = new HealthBar(100,100,Component.RIGHT_ALIGNMENT);
        healthbar2.setBounds((int) ((43 / 60.0) * GlobalVar.getScreenWidth()),
                (int) (2 / 40.0 * GlobalVar.getScreenHeight()),
                (int)(15 / 60.0 * GlobalVar.getScreenWidth()),
                (int) (1.5 / 40.0 * GlobalVar.getScreenHeight()));
        this.add(healthbar2);
        //player 1 name
        player1Name = new JLabel("Steve");
        player1Name.setFont(new Font("Serif",Font.BOLD,32));
        player1Name.setBounds(getFractionSize(GlobalVar.getScreenWidth(),1.5,60),
                getFractionSize(GlobalVar.getScreenHeight(),2.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),10,60),
                getFractionSize(GlobalVar.getScreenHeight(),5,40));
        add(player1Name);
        //player 2 name
        player2Name = new JLabel("Alex");
        player2Name.setFont(new Font("Serif",Font.BOLD,32));
        player2Name.setBounds(getFractionSize(GlobalVar.getScreenWidth(),55,60),
                getFractionSize(GlobalVar.getScreenHeight(),2.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),10,60),
                getFractionSize(GlobalVar.getScreenHeight(),5,40));
        add(player2Name);
        //turn info
        pnl_turns.setBounds(getFractionSize(GlobalVar.getScreenWidth(),28,60),
                getFractionSize(GlobalVar.getScreenHeight(),1,60),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60));
        add(pnl_turns);
        //foto player 1
        System.out.println("ehe");
        player1Picture.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),3,60),
                getFractionSize(GlobalVar.getScreenHeight(),11,40),
                getFractionSize(GlobalVar.getScreenWidth(),4,60),
                getFractionSize(GlobalVar.getScreenHeight(),4,40));
        add(player1Picture);
        //foto player 2
        player2Picture.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),53,60),
                getFractionSize(GlobalVar.getScreenHeight(),11,40),
                getFractionSize(GlobalVar.getScreenWidth(),4,60),
                getFractionSize(GlobalVar.getScreenHeight(),4,40));
        add(player2Picture);
        //deck player A
        //deck A
        deck_A_player1.setBounds(
               getFractionSize(GlobalVar.getScreenWidth(),8,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),8.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_A_player1);
        //deck B
        deck_B_player1.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),13,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),8.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_B_player1);
        //deck C
        deck_C_player1.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),8,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),13.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_C_player1);
        //deck D
        deck_D_player1.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),13,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),13.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_D_player1);
        //deck E
        deck_E_player1.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),18,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),11.1,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_E_player1);
        //deck player B
        //deck A
        deck_A_player2.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),47,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),8.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_A_player2);
        //deck B
        deck_B_player2.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),42,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),8.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_B_player2);
        //deck C
        deck_C_player2.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),47,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),13.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_C_player2);
        //deck D
        deck_D_player2.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),42,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),13.5,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_D_player2);
        //deck E
        deck_E_player2.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),37,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),11.1,40),
                getFractionSize(GlobalVar.getScreenWidth(),4.5,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),4.5,40)
        );
        add(deck_E_player2);
        //phase
        //draw
        pnl_draw_phase.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),1,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),21,40),
                getFractionSize(GlobalVar.getScreenWidth(),13,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),1.25,40)
        );
        add(pnl_draw_phase);
        //plan
        pnl_plan_phase.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),14.03,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),21,40),
                getFractionSize(GlobalVar.getScreenWidth(),13,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),1.25,40)
        );
        add(pnl_plan_phase);
        //attack
        pnl_attack_phase.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),27.03,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),21,40),
                getFractionSize(GlobalVar.getScreenWidth(),13,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),1.25,40)
        );
        add(pnl_attack_phase);
        //end
        pnl_end_phase.setBounds(
                getFractionSize(GlobalVar.getScreenWidth(),40.03,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),21,40),
                getFractionSize(GlobalVar.getScreenWidth(),13,60) ,
                getFractionSize(GlobalVar.getScreenHeight(),1.25,40)
        );
        add(pnl_end_phase);
        //next phase button


        for(Component c:this.getContentPane().getComponents()){
            System.out.println(c);
        }
    }

    private void initKeyListener(){
        this.addKeyListener(new KeyListener(){
            @Override
            public void keyTyped(KeyEvent e) {//kirim ke user input
                //  System.out.println("printed key:"+e.getKeyCode());
            }

            @Override
            public void keyPressed(KeyEvent e) {
                System.out.println("pressed key:"+e.getKeyCode());
                switch(e.getKeyCode()){
                    case 112://F1 ->aktifkan/nonaktifkan debug mode
                   //     pnl_turns.updateTurn(++turn);
                        Frame instance = Frame.getInstance();
                        boolean debugMode = instance.getDebugMode();
                        instance.setDebugMode(!debugMode);
                        instance.getContentPane().removeAll();
                        instance.renderComponents(instance.getDebugMode());
                        instance.revalidate();
                        instance.repaint();
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });
    }
    public void renderComponents(boolean debugMode){
        if(debugMode){
            this.add(grid);
        }
        add(nextPhaseLabel);
        add(pnl_end_phase);
        add(pnl_attack_phase);
        add(pnl_plan_phase);
        add(pnl_draw_phase);
        add(deck_E_player2);
        add(deck_D_player2);
        add(deck_C_player2);
        add(deck_B_player2);
        add(deck_A_player2);
        add(deck_E_player1);
        add(deck_D_player1);
        add(deck_C_player1);
        add(deck_B_player1);
        add(deck_A_player1);
        add(player2Picture);
        add(player1Picture);
        add(pnl_turns);
        add(player2Name);
        add(player1Name);
        add(healthbar2);
        this.add(healthbar1);
    }
    // </editor-fold>//GEN-END:initComponents
    public void run(BoardController board_controller) {
        this.board_controller = board_controller;
        this.setVisible(true);

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Frame.getInstance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.JPanel jPanel1;
    private PlayerPicture player1Picture;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private PlayerDeckCard deck_A_player1;
    private PlayerDeckCard deck_C_player1;
    private javax.swing.JPanel jPanel2;
    private PlayerDeckCard deck_B_player1;
    private PlayerDeckCard deck_D_player1;
    private PlayerDeckCard deck_E_player1;
    private PlayerPicture player2Picture;
    private CardDeckPanel cardDeckPanel;
    private PlayerDeckCard deck_A_player2;
    private PlayerDeckCard deck_B_player2;
    private PlayerDeckCard deck_D_player2;
    private PlayerDeckCard deck_E_player2;
    private PlayerDeckCard deck_C_player2;
    private HandCardLabel handCard3;
    private HandCardLabel handCard4;
    private HandCardLabel handCard5;
    private javax.swing.JPanel jPanel7;
    private ShowManaLabel showManaLabel;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private javax.swing.JLabel lbl_name1;
    private javax.swing.JLabel lbl_name2;
    private ProgressPanel pnl_attack_phase;
    private javax.swing.JPanel pnl_board;
    private javax.swing.JPanel pnl_card_description;
    private CardPreviewPanel pnl_card_preview;
    private javax.swing.JPanel pnl_center;
    private ProgressPanel pnl_draw_phase;
    private ProgressPanel pnl_end_phase;
    private HandCardLabel handCard1;
    private HandCardLabel handCard2;
    private javax.swing.JPanel pnl_healtbar2;
    //private javax.swing.JPanel pnl_healthbar1;
    private javax.swing.JPanel pnl_next_phase;
    private javax.swing.JPanel pnl_north;
    private javax.swing.JPanel pnl_phase;
    private ProgressPanel pnl_plan_phase;
    private javax.swing.JPanel pnl_south;
    private javax.swing.JPanel pnl_south_center;
    private javax.swing.JPanel pnl_south_east;
    private javax.swing.JPanel pnl_south_west;
    private TurnInfo pnl_turns;
    private HealthBar healthbar1;
    private HealthBar healthbar2;
    private JLabel player1Name;
    private JLabel player2Name;
    private java.awt.Button nextPhaseLabel;
    private GridHelper grid;
   // private CardLabel card;
    // End of variables declaration//GEN-END:variables
}